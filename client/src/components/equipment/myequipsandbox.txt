import React, { useState } from 'react';
import lists from '../../helper';

class MyEquipment extends React.Component {
  constructor(props) {
    super(props);
    this.state = { values: [] };
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  createUI() {
    return this.state.values.map((el, i) => (
      <div key={i}>
        <input
          type="text"
          value={el || ''}
          onChange={this.handleChange.bind(this, i)}
        />
        <input
          type="button"
          value="remove"
          onClick={this.removeClick.bind(this, i)}
        />
      </div>
    ));
  }

  handleChange(i, event) {
    let values = [...this.state.values];
    values[i] = event.target.value;
    this.setState({ values });
  }

  addClick() {
    this.setState((prevState) => ({ values: [...prevState.values, ''] }));
  }

  removeClick(i) {
    let values = [...this.state.values];
    values.splice(i, 1);
    this.setState({ values });
  }

  handleSubmit(event) {
    alert('A name was submitted: ' + this.state.values.join(', '));
    event.preventDefault();
  }

  render() {
    return (
      <form onSubmit={this.handleSubmit}>
        {this.createUI()}
        <input
          type="button"
          value="add more"
          onClick={this.addClick.bind(this)}
        />
        <input type="submit" value="Submit" />
      </form>
    );
  }
}

export default MyEquipment;

// const categoryList = ['Cables', 'Stands'];
// const equipList = [
//   [
//     { name: 'XLR Cable', description: '', iconURL: 'something' },
//     {
//       name: 'Quarter-Inch Cable',
//       description: '',
//       iconURL: 'something'
//     }
//   ],
//   [
//     { name: 'Mic Stand', description: '', iconURL: 'something' },
//     {
//       name: 'Guitar Stand',
//       description: '',
//       iconURL: 'drum-kit',
//       quantity: 2
//     }
//   ]
// ];

// class MyEquipment extends React.Component {
//   // const [category, setCategory] = useState(lists.cables);

//   // const [equipToSave, setEquipToSave] = useState([]);

//   // const [equipData, setEquipData] = useState(null);

//   // const [numberOfItems, setNumberOfItems] = useState(0);

//   state = { category: ['hello', 'hi'] };
//   state = { equipToSave: [] };
//   state = { equipData: null };
//   state = { numberOfItems: 0 };
//   state = { categoryListStateVariable: ['hello', 'huh'] };

//   // const [equipDescription, setEquipDescription] = useState([]);
//   //   const [equipQuantity, setEquipQuantity] = useState(1);

//   handleCategorySelect = (event) => {
//     this.setCategory(equipList[event.target.value]);
//   };

//   handleEquipClick = (event) => {
//     this.setEquipToSave(this.equipToSave.concat(event.target.value));
//     this.setNumberOfItems(this.numberOfItems + 1);
//   };

//   //maybe: 4 state values: name, user desc., quantity, and correspondind number for each line;
//   // in handleSave function, loop through each and concat all of those, by index, into an object. then send that obj

//   // const handleSaveEquip = () => {
//   //   try {
//   //     axios
//   //       .post('/api/equipment', { data: equipToSave })
//   //       .then(alert('equipment saved'));
//   //   } catch (error) {
//   //     alert(error);
//   //   }
//   // };

//   // handleChange = async (event) => {
//   //   this.setEquipData({
//   //     ...equipData.equipData,
//   //     [event.target.name]: event.target.value
//   //   });
//   // };

//   handleFormSubmit = (event) => {
//     event.preventDefault();
//     // setEquipData();
//   };

//   render() {
//     return (
//       <div className="my-equipment-component">
//         <h1>My Equipment</h1>
//         <form name="equipmentList" onSubmit={this.handleFormSubmit}>
//           <select onChange={this.handleCategorySelect}>
//             {this.state.categoryListStateVariable.map((category) => (
//               <option
//                 value={this.state.categoryListStateVariable.indexOf(category)}
//               >
//                 {category}
//               </option>
//             ))}
//           </select>
//           {this.state.category.map((equipItem) => (
//             <button
//               type="button"
//               value={equipItem.name}
//               onClick={this.handleEquipClick}
//             >
//               {equipItem.name}
//             </button>
//           ))}

//           <div className="equip-table">
//             <span>
//               <strong>Name</strong>
//             </span>
//             <span>
//               <strong>Description</strong>
//             </span>
//             <span>
//               <strong>Quantity</strong>
//             </span>
//           </div>
//           {this.equipToSave.map((equipItem) => {
//             // check for item quantity here?
//             return (
//               <div>
//                 <span>{equipItem + this.numberOfItems}</span>
//                 <input
//                   name="description"
//                   type="text"
//                   placeholder="description"
//                 />

//                 <span>{equipItem.quantity}</span>
//                 <input
//                   name="quantity"
//                   type="number"
//                   placeholder="quantity"
//                   onChange={this.handleChange}
//                 />
//               </div>
//             );
//           })}
//           <button type="submit">
//             {/* onClick={handleSaveEquip
//             Save
//           </button>
//         </form>
//       </div>
//     );
//   }
// }

// export default MyEquipment;
